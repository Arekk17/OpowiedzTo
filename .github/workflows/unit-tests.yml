name: Unit Tests

on:
  pull_request:
    branches: ["**"]
  push:
    branches: [master, dev]
  workflow_dispatch:
    inputs:
      test_type:
        description: "Typ testów do uruchomienia"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - backend
          - frontend
      run_coverage:
        description: "Uruchomić raporty pokrycia?"
        required: false
        default: true
        type: boolean

permissions:
  contents: read
  id-token: write

concurrency:
  group: unit-tests-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            backend:
              - 'opowiedzto-api/**'
            frontend:
              - 'web/**'

  backend-tests:
    name: Backend Tests (API)
    runs-on: ubuntu-latest
    needs: [changes]
    if: ${{ github.event_name == 'workflow_dispatch' && (inputs.test_type == 'all' || inputs.test_type == 'backend') || (github.event_name != 'workflow_dispatch' && needs.changes.outputs.backend == 'true') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache API dependencies
        uses: actions/cache@v4
        with:
          path: ./opowiedzto-api/node_modules
          key: ${{ runner.os }}-api-${{ hashFiles('opowiedzto-api/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-api-

      - name: Install API dependencies
        working-directory: ./opowiedzto-api
        run: npm ci

      - name: Run linting
        working-directory: ./opowiedzto-api
        run: npm run lint

      - name: Run unit tests
        working-directory: ./opowiedzto-api
        run: npm run test:ci
        env:
          NODE_ENV: test

      - name: Upload coverage reports
        if: ${{ (
          (github.event_name == 'workflow_dispatch' && inputs.run_coverage == true) ||
          (github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')) ||
          (github.event_name == 'pull_request' && (github.base_ref == 'master' || github.base_ref == 'dev'))
          ) && (!github.event.pull_request || !github.event.pull_request.head.repo.fork) }}
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          file: ./opowiedzto-api/coverage/lcov.info
          flags: backend
          name: backend-coverage
          token: ${{ secrets.CODECOV_TOKEN }}

  frontend-tests:
    name: Frontend Tests (Web)
    runs-on: ubuntu-latest
    needs: [changes]
    if: ${{ github.event_name == 'workflow_dispatch' && (inputs.test_type == 'all' || inputs.test_type == 'frontend') || (github.event_name != 'workflow_dispatch' && needs.changes.outputs.frontend == 'true') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Web dependencies
        uses: actions/cache@v4
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-web-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-web-

      - name: Install Web dependencies
        working-directory: ./web
        run: npm ci --ignore-platform
        env:
          npm_config_target_platform: linux
          npm_config_target_arch: x64

      - name: Run linting
        working-directory: ./web
        run: npm run lint

      - name: Run unit tests
        working-directory: ./web
        run: npm run test:ci
        env:
          NODE_ENV: test

      - name: Upload coverage reports
        if: ${{ (
          (github.event_name == 'workflow_dispatch' && inputs.run_coverage == true) ||
          (github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')) ||
          (github.event_name == 'pull_request' && (github.base_ref == 'master' || github.base_ref == 'dev'))
          ) && (!github.event.pull_request || !github.event.pull_request.head.repo.fork) }}
        uses: codecov/codecov-action@v4
        continue-on-error: true
        with:
          file: ./web/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          token: ${{ secrets.CODECOV_TOKEN }}

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Check test results
        run: |
          echo "✅ All unit tests completed successfully!"
          echo "Backend tests: ${{ needs.backend-tests.result }}"
          echo "Frontend tests: ${{ needs.frontend-tests.result }}"
