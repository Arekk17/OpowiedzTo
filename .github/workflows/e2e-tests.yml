name: E2E Tests

on:
  pull_request:
    branches: ["**"]
  push:
    branches: [master, dev]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: e2e-tests-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            api:
              - 'opowiedzto-api/**'
            web:
              - 'web/**'

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [changes]
    if: ${{ needs.changes.outputs.api == 'true' || needs.changes.outputs.web == 'true' || github.event_name == 'workflow_dispatch' }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: opowiedzto_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache API dependencies
        uses: actions/cache@v4
        with:
          path: ./opowiedzto-api/node_modules
          key: ${{ runner.os }}-api-${{ hashFiles('opowiedzto-api/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-api-

      - name: Cache Web dependencies
        uses: actions/cache@v4
        with:
          path: ./web/node_modules
          key: ${{ runner.os }}-web-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-web-

      - name: Install API dependencies
        working-directory: ./opowiedzto-api
        run: npm ci

      - name: Install Web dependencies
        working-directory: ./web
        run: npm ci --ignore-platform
        env:
          npm_config_target_platform: linux
          npm_config_target_arch: x64

      - name: Create test database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE opowiedzto_test;" || true

      - name: Build API
        working-directory: ./opowiedzto-api
        run: npm run build
        env:
          DATABASE_NAME: opowiedzto_test
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres

      - name: Run database migrations
        working-directory: ./opowiedzto-api
        run: npm run migration:run
        env:
          DATABASE_NAME: opowiedzto_test
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres

      - name: Build Web
        working-directory: ./web
        run: npm run build

      - name: Run E2E tests for API
        working-directory: ./opowiedzto-api
        run: npm run test:e2e
        env:
          DATABASE_NAME: opowiedzto_test
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: postgres
